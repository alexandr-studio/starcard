---
import Persona from "@/components/Persona.astro";
import Info from "@/components/Info.astro";
import Section from "@/components/Section.astro";
import Field from "@/components/Field.astro";
import LegalSection from "@/components/LegalSection.astro";
import { validatedProfile as profile } from "@/lib/validateProfile";
import { formatUrlPath } from "@/lib/url";
import type { LegalField } from "@/components/LegalSection.astro";

const iconModules = import.meta.glob("../components/icons/*.astro", {
	eager: true,
});
// normalize keys: "@/components/icons/linkedin.astro" → "linkedin"
const icons = Object.fromEntries(
	Object.entries(iconModules).map(([path, mod]) => {
		const name = path.split("/").pop()?.replace(".astro", "") ?? "";
		return [name.toLowerCase(), (mod as any).default];
	})
);
---

<div
	class="card min-h-[100dvh] min-w-[100dvw] flex flex-col flex-nowrap gap-20 p-12"
>
	<Persona
		name={profile.fullname}
		title={profile.title}
		avatarUrl={profile.avatarUrl}
		avatarRounded={profile.avatarRounded as
			| "full"
			| "none"
			| "sm"
			| "md"
			| "lg"
			| "xl"}
	/>
	<Info
		phone={profile.phone}
		email={profile.email}
		homePage={profile.homePage}
		location={profile.location}
	/>
	{
		profile.sections?.map((section) => {
			const SectionIcon = icons[section.icon?.toLowerCase() ?? ""] ?? null;

			return (
				<Section title={section.title}>
					{SectionIcon && <SectionIcon slot="icon" title={section.title} />}
					<div class="flex flex-col flex-nowrap gap-4">
						{section.items
							?.map((item) => {
								const Icon = icons[item.icon?.toLowerCase() ?? ""] ?? null;
								return (
									<Field>
										<span>{formatUrlPath(item.url ?? "")}</span>
										{Icon && (
											<span slot="icon">
												<Icon title={item.url ?? ""} />
											</span>
										)}
									</Field>
								);
							})
							.sort((a, b) => a.order - b.order)}
					</div>
				</Section>
			);
		})
	}
	{
		profile.legal && (
			<LegalSection
				title={profile.legal.title}
				records={profile.legal.items as LegalField[]}
			/>
		)
	}

	<footer class="text-center text-sm opacity-30">
		© {new Date().getFullYear()} Alexander Sedeke
	</footer>
</div>

<style>
	.card {
		color: var(--color-font-primary);
		border: 4px solid transparent;
		background:
			radial-gradient(
					ellipse 80% 70% at 130% 65%,
					var(--color-background-fill-start) 0%,
					var(--color-background-fill-end) 100%
				)
				padding-box,
			radial-gradient(
					ellipse 45% 70% at 130% 65%,
					var(--color-background-stroke-start) 0%,
					var(--color-background-stroke-end) 100%
				)
				border-box;
		background-repeat: no-repeat;
		box-sizing: border-box;
	}
</style>
